JS中有两种数据类型：
    基本数据类型：String Number Null Undefined Boolean Symbol BigInt
    引用数据类型：Object function Array Date() RegExp()

    区别：
        基本数据类型存的是值 存到栈里面
        引用数据类型存的是址 存到堆里面
          【值存到堆里面，地址存到栈里面】此地址指向堆里面的值 此地址：16进制的字符串

    Symbol:应用场景
        1、instanceof的实现原理通过:[Symbol.hasInstance]
        2、可以改写数组的合并方法：Array.prototype[Symbol.isConcatSpreadable] = false;
        3、可以设置数据类型
        4、设置唯一值
数组的方法：
    push:在数组尾部添加一个元素，改变原数组,并且返回数组的长度
    pop:删除数组中最后一个元素，改变原数组，并且返回删除的元素
    shift:删除数组头部第一个元素，改变原数组，返回删除的元素
    unshift:在数组的头部添加一个元素，改变原数组，返回新的数组长度
    map:高阶函数，可以映射一个数组，返回一个修改之后的新数组，接收三个参数
        1、element：数组中的每个元素
        2、index：下标【索引】
        3、arr：原数组  ？
    forEach:高阶函数，可以循环数组，修改原数组，没有返回值，接收三个参数
        1、element：数组中的每个元素
        2、index：下标【索引】
        3、arr：原数组  ？
    filter:高阶函数，数组过滤器，过滤原数组，返回过滤之后的新数组，不改变原数组
    some:高阶函数，数组中只要有一个符合条件，就返回true，不改变原数组
    every:高阶函数，数组中每一个元素的条件都满足，则返回true，不改变原数组
    find:高阶函数，查找数组中第一次找到符合条件的元素，返回当前找到的元素，不改变原数组
    concat:数组合并，返回合并之后的新数组
    reduce:高阶函数，接收两个参数，返回计算结果
            第一个：回调函数，又接收常用的两个参数
                  第一个：上一次的计算结果
                  第二个：是当前值
            第二个：初始值 ？
    
    flat:数组降维【数组扁平化】，可以不传参数，降一维，参数传Infinity,最后都降到一维
    sort:高阶函数，数组排序，返回一个排序后的新数组,不传参，按照unicode编码排序
         可以接收一个回调函数，此函数接收两个参数
         第一个：a
         第二个：b
         a-b:升序
         b-a:降序
    slice:截取数组，不改变原数组，返回截取之后的数据组成的数组，接收两个参数，都是索引
        第一个是开始截取的下标
        第二个是截取结束的下标
        特点：不包括结束下标
    splice:截取、添加、删除数组，返回的是被删除的数据组成的新数组，有三个参数
        第一个：开始的下标
        第二个：删除的数量
        第三个：需要替换删除位置的数据
    join:把数组转字符串，不传参数时，默认以 ，转，可以传参数，传你想要的字符
        返回值是转变之后的字符串

    keys:返回的是迭代器对象，迭代器对象里面有当前数组的索引值  【不常用】
    values:返回的是迭代器对象，迭代器对象里面有当前数组的值   【不常用】

Object:JS内置对象
    两种创建对象的方式
        var obj = {};
        var obj1 = new Object();
    访问对象：
        obj['name'] 
        obj.name

    修改对象：
         obj['name'] = 'xxx'
    删除对象：
        delete 属性
    keys:获取对象中的所有键名，并把键名存到新数组里面返回
    values:获取对象中的所有键值，并把键值存到新数组并返回
    is:判断两个对象是否相等，如果相等则返回true，否则返回false
    assign:把原对象赋值给目标对象，返回目标对象，可以克隆
           第一层深克隆，嵌套的是浅克隆，整体是浅克隆
    freeze:是冻结一个对象，一般在纯展示的页面进行冻结数据，冻结
           之后的数据只能访问，不能做其他任何操作，优化性能的方法
    isFrozen:判断当前对象是否被冻结,被冻结过之后返回true，否则返回false
    create:创建一个对象，可以把其他数据添加到当前对象中，添加到当前创建
           的对象的prototype上了
    seal:密封一个对象,只能在原有的数据上进行访问和修改，不能新增加数据，
          也不能删除数据
    isSealed:判断一个对象是否密封，如果密封了返回true，否则返回false

    defineProperty:可以监听、修改、拦截、返回【增、删、改、查】一个对象，不支持数组
        defineProperty参数：有三个
            1、目标对象，必传
            2、要修改的属性，必传
            3、描述【增、删、改、查】，必传
        属性描述符：
            value:默认值，可以是任何数据类型，默认值undefined
            writable：设置当前对象是否可写，true代表可写，false不可写，
                      默认值为false
            enumerable ：设置当前对象是否可以枚举【枚举：可以被for in循环】
                        true代表可以循环，false不可以被循环，默认值为false
            configurable：
                    设置当前对象是否可以被配置，就是是否可以被删除【delete】，被重新
                    设置属性，true代表可以被删除、被重写，false不可以被重写、删除
                    默认值为false
        存取描述符：
            set:可以设置属性的方法，过程可以进行拦截
            get:获取属性的方法，过程可以进行拦截
        注意：
            1、存取描述符不一定非要一对出现，可以单独写
            2、属性描述符不能和存取描述符的value和writable同时存在
            3、存取描述符的set\get分别对应的是setter\getter函数
                set对应setter函数
                get对应getter函数

        如果obj中包含指定属性，则修改现有属性的值，如果obj中不包含指定属性，则在obj中自动添加新属性


    
    
    
    

        







