协商缓存：
    还是在本地进行缓存，还是最本地获取，只不过会根据服务端返回的两个字段进行判断，
    数据是否已经过期，过期了则获取最新的数据，更新到本地缓存，然后从本地获取最新缓存
    数据
    etag：每个文件，服务端都进行了标记，通过hash值，一旦数据变化了，则hash则会变化
    last-modified:文件最后的修改时间，返回给客户端，客户端拿到当前字段

    客户端拿到以上两个字段和服务端的进行对比，如果有变化，则说明数据被更新过了，客户端
    则需要询问后台，获取最新数据，更新到本地存储里面

    数据有变化了状态码：200
    数据没有变化状态码：304

    流程：
        服务端把字段携带在响应头给客户端，客户端拿着这些字段再通过请求头返回给服务端，
        进行对比
    客户端：if-modified-since

    if-modified-since == last-modified

强缓存：
    直接从本地拿数据，不用和服务端进行任何的交互
    字段：cache-control、expires
    cache-control:可以设置存储的类型，两种类型，公共的，私有的，还可以设置最大存储多少 
    expires：日期

    cache-contro:no-store 则不让缓存

    优先级：cache-control > expires
    
    状态码：200



