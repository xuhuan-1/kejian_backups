JS双精度问题：浮点数据类型
    计算机只能识别计算二进制数据，计算机计算二进制的浮点型数据最多只会截取
    52位，计算时以二进制计算，出结果之后只保留17位，计算机在转成10进制进
    行输出

    0.1 ==》 2进制 0.0001100110011001100110011

1、parseInt():接收两个参数，第一个是你的字符串，第二个参数是
   转换的进制，进制范围在2-36之间，如果超出当前进度范围则返回
   NaN,如果解析不了，都返回NaN

2、parseInt第二个参数，如果为0，则以10进制进行解析，如果为0x或者
   0X，则以16进制解析数据

3、["1","2", "3"].map(parseInt) ==》 [1,NaN,NaN]
   [1]:parseInt()第二个参数是0，0代表10进制，正确解析
   [1,2]:parseInt()的第二个参数是1，1不在2-36范围内，则返回NaN
   [1,2,3]:parseInt()的第二个参数是2，2在2-36范围内，但是只能
          解析0或者1之间的数字，否则返回NaN

    所以：此题答案为 [1,NaN,NaN]
4、进制解析以一位一位解析，2进制遇到能解析的，继续向后解析，如果解析
   过程中碰到解析不了的，则返回之前解析过的内容，然后停止解析
   如果首字母就不能解析，则直接返回NaN

5、进制转换： 
    2转8：取三合一：从右到做，2为底
    8转2：除法，得商 ，取余，不足补 0
    2转16：取四合一，不足补0：从右到做，2为底，以组为单位拼接算出结果，组内相加
    10转2：除法，得商，取余，不足补 0

