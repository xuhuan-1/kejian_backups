跨域：
    浏览器为了安全性考虑，而产生的跨域  【不同域名】
    域名：协议、域名、子域名、端口号 
服务端默认端口号：443
前端默认端口号：80  

同源策略：
    浏览器的同源策略，就是期望 协议、域名、子域名、端口号一致则不会违反同源策略
    平常请求数据的服务器地址基本是不一样，前后端交互时，会产生跨域问题，因为请求数据
    时，违反了同源策略

解决跨域的方式：
    JSONP：原理，动态创建script标签，利用src属性的特点，指向外部资源，不受同源策略
           的限制
           利用src进行拼接回调函数获取后台数据【需要服务端和前端配合】

    cors：【服务端解决：常用】
        服务端设置允许访问的响应头部 
            setHeader('Access-control-allow-origin','baidu.com')

    nginx:反向服务器代理  【服务端解决：常用】

    document.domain + iframe
    window.name + iframe
    location.hash + iframe
    postMessage()  
    websocket() :持久性的请求，多用于实时聊天，双向通信，不会主动断开连接，有状态的
                请求类型: ws    连接成功状态码    101   


    
